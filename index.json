[{
    "title": "突然想到好像已经水逆了快四个月了",
    "date": "",
    "description": "",
    "body": "自从六月份意外受伤到现在已经快四个月了，感觉就是从那个时候我的运气就开始变差了，工作上各种破事、受伤、车的保险杠被人刮了人还跑了、然后今年最重要的评职称也因为继续教育漏了专业培训导致又要再拖一年……\n哎～不知道什么时候才能转运，本来以为过完这个十一就该转运了，没想到到了十月份运气依旧很差。\n本来评职称应该是今年最重要的一个任务，结果今年又没完成。虽然说评职称不是很难，但是总是怕夜长梦多，不知道后面政策会发生什么样的变化。而且评职称这事是需要年限的，这次晚了一年两年，后面再往上评过就会继续晚一两年。\n所以后面到放假前的两三个月干点什么呢？感觉没什么目标了……\n算了，过一天算一天吧，希望下个月就能转运！！！\n最后\n水逆退散！！！！\n",
    "ref": "/blog/%E7%AA%81%E7%84%B6%E6%83%B3%E5%88%B0%E5%A5%BD%E5%83%8F%E5%B7%B2%E7%BB%8F%E6%B0%B4%E9%80%86%E4%BA%86%E5%BF%AB%E5%9B%9B%E4%B8%AA%E6%9C%88%E4%BA%86/"
  },{
    "title": "好像想到一个水paper的方向，写出来记录一下怕后面忘了",
    "date": "",
    "description": "",
    "body": "刚才没事干刷推发现一条tweet，内容是让人猜他Twitter名字的意思。本来以为网上能找到现成的工具去，但是找到的都是拼音首字母缩写翻译工具，英文的貌似没有见到\n我感觉应该会有英文版的工具，可能只是我没有找到。不过仔细想想，英文的这类工具可能也只是网络缩写翻译工具，只是简单的把网上能找到缩写都列出来，然后在里面搜索。如果只是一句普通的话，比如上面说的那条推里说的猜一句普通的话可能就不一定能用了。\n其实目前只是有一个感兴趣的方向，并不是说已经想到了具体的实现方法。反正第一时间想到的就是最简单的穷举法——简单的利用字典对所输入的首字母对应的全部单词进行排列组合，然后利用搜索引擎去判断生成的单词组合是不是一个正常的没有语法错误且常用的句子。但是这样貌似是个最笨的办法，如果真的这么做就是真的水paper了。\n还有一个想法就是从英语的语法入手，也就是英语的五种基本句型：SV、SVP、SVO、SVoO、SVOC，根据首字母的位置、包含该首字母的单词的词性（十种词性：名词noun、代词pronoun、形容词adjective、副词 adverb、动词verb、数词numeral、冠词article、介词preposition、连词conjunction、感叹词interjection）来初步剔除不符合要求的单词来降低复杂度。然后再用之前的方法来确定生成的单词组合的正确性。虽然这个稍微有了点技术含量，但其实还是靠蒙，而且和我的专业也不怎么靠边。\n仔细想象还是利用NLP来判断单词组合的正确性更适合我去水论文🤣\n",
    "ref": "/blog/%E5%A5%BD%E5%83%8F%E6%83%B3%E5%88%B0%E4%B8%80%E4%B8%AA%E6%B0%B4paper%E7%9A%84%E6%96%B9%E5%90%91%E5%86%99%E5%87%BA%E6%9D%A5%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E6%80%95%E5%90%8E%E9%9D%A2%E5%BF%98%E4%BA%86/"
  },{
    "title": "我是真的不想当领导",
    "date": "",
    "description": "时隔六年，我又想辞职了",
    "body": "今天下班回家的路上我就一个想法，领导谁爱当谁当吧。。。\n暑假期间被学校抓上搞领导提拔考察弄了快半个假期，谁知道我竟然被弄成了部门负责人。今天终于任命了，但是就半天时间，我现在最想干的事是辞职。\n估计绝大多数的人听到要升职都会很高兴————“终于能当领导了！”，但是我知道提拔名单里有我我第一反映是很愁。我从小就不是喜欢当官的人，上学的时候让我当个小组长我都能躲就躲。怎么说呢，我不喜欢当领导的第一个原因是我不喜欢被人管着，第二是我不喜欢命令别人去干这干那。我只想自由自在的，做我想做的事，你让我做的事情我按你的要求做好，但是你别干涉我怎么做、什么时候做。之前当个普通老师的时候虽然会被人管，但遇到的领导都还算好，不会干涉我怎么做，不会强制我加班。你只用信任我能做好，到时间我会给你你想要的结果。但是当了领导之后就会被一堆人盯着。你不加班上面领导觉得你工作态度有问题，你加班下面的人觉得你是奋斗逼。说真的，我就是只想每天早上按时上班下午按时上班，有事干事没事摸鱼，月初到日子了领工资的一个普通小老师而已，我对什么这个处长那个院长一点点的兴趣都没有，真的觉得我干得好直接给我涨工资就行了，我不要领导那个位置。。。\n今天开完任免大会，之前的同事见到我了第一句话基本都是“恭喜啊高升了”“当领导了不错啊”，要么就是”都当负责人了你咋看着不是很高兴呢“。说真的，你们谁想干这个位置我可以立马让给你，然后还请你吃顿饭。\n中午午休的时候想了想，唉～估计不当是不可能的，就现在这个形势，你只要敢说你不干，领导就敢给你扣个”不服从党组织的安排”的帽子，凑合着混吧，这次我们大部门的领导也换了，赌一把上面的领导不是傻逼。\n结果……唉，下午把我叫去没说几句就给我说“我之前那个部门下午基本没有10点之前下班的，都在办公室加班到十一点才走，你最近给下面的老师说一下，为了自己的发展，咱们\u0026rsquo;自愿\u0026rsquo;加班”。这是24K纯傻逼吧，脑子不正常吗“自愿”加班？而且有什么事不能上班的时候干完非得晚上加班干，真的有这么紧急？第二天世界末日？还是明天五大流氓的核弹就全扔出来了？如果真的是有急事要加班也就算了，这还没正式开学呢就让人“自愿”加班，明摆着让人装样子耗时间么。有什么意义？\n看着他给我说“自愿加班”的时候我就想起了马云说“996是福报”的嘴脸，但别人好歹是为自己的公司压榨员工，你一个大学里面的部门领导，压榨下面的老师你能发财么？关键是你要压榨别人你自己去说啊，让我说算什么。\n而且，这当了部门负责人入党这事估计也逃不了了。工作这么多年每次让我入党我都想尽办法推掉，现在再推估计会被扣个“不讲政治”的帽子。我太难了……\n真的，学校里那么多人上赶着入党，上赶着升职当领导，干嘛非要选我？？？？\n我！不！想！当！领！导！！！！我！不！想！入！党！！！！\n",
    "ref": "/blog/%E6%88%91%E6%98%AF%E7%9C%9F%E7%9A%84%E4%B8%8D%E6%83%B3%E5%BD%93%E9%A2%86%E5%AF%BC/"
  },{
    "title": "体检结果出来了",
    "date": "",
    "description": "上个月做的体检终于出结果了",
    "body": "上个月做的体检终于出结果了。\n之前怀疑颈椎、腰椎还有胃有问题，结果出来发现前两个是的确有问题，颈椎稍微严重一点，腰椎有一点点。但是我的胃竟然完全没问题，胃壁光滑蠕动正常。但是食道有反流性食道炎+食道裂孔疝……难怪一直胃反酸而且胃上面那块动不动就会疼呢。不过食道这个事不是很严重，吃点兰索拉唑就好了。 至于颈椎么，我感觉是最近几年手机玩的有点多再加上大部分时间用的都是笔记本，办公室电脑显示器的高度也有问题。反正我拿到体检报告的第一反应是我应该买一个显示器支架和一个好的hm的椅子🤣。显示器支架也还好，八九百就能搞定。hm的椅子都好贵，embody的功能看起来不错，但是第一太贵，得花八九千，而且长相不是很喜欢。aeron看起来不错，价格也还好五六千。但是花五六千买个椅子我感觉还是有点奢侈。再考虑考虑吧，反正也没想好什么时候搬到新房子去住，等真的要搬过去的时候再说，到时候说不定还得再弄个升降桌，这么一想真的好花钱啊。。。。 但是想一想，这些钱花在买桌椅设备上总比以后给医院强吧，要是真到给医院交钱的时候，那还指不定要花出去几个aeron呢，关键时刻钱花了还要受罪。 对了，体检报告还说我尿酸偏高，我看了下也就比标准值高了10%，应该也还好，但是还是得注意点了。还好我不喝酒，只是可乐喝的有点多，以后得慢慢的减少和饮料，过会就去网上找点龙井之类的茶叶回来喝。毕竟光和白水总感觉缺点什么🤣。 然后，减肥的事情我觉得也该正式考虑一下了，周围见到两个人都减了差不多20kg，看起来变化很明显。等过几天放假了我也要正式开始减肥了，刚好尿酸过高，需要控制饮食，那就刚好一起把肥也减了吧。之前少吃主食就能减八九公斤，这次好好安排一下吃什么应该能达到恢复70kg的目标。6\u000818买的网球装备也到了，学生放假回家之后没事干来学校网球场打打网球，等迪卡侬的反曲弓有右手的了再买个弓，连连射箭也挺好的。反正对于我这种耐力不行的人，我感觉这两个运动对于我来说比什么跑步、篮球靠谱多了。慢慢来吧，希望能在这个暑假把体重减到7字头，到时候再发篇blog庆祝一下。 就这样吧，希望大家身体都能健康。\n",
    "ref": "/blog/%E4%BD%93%E6%A3%80%E7%BB%93%E6%9E%9C%E5%87%BA%E6%9D%A5%E4%BA%86/"
  },{
    "title": "【文档翻译】keras的图象增强对象类ImageDataGenerator",
    "date": "",
    "description": "图象增强对象类ImageDataGenerator",
    "body": "ImageDataGenerator class 用实时数据增强的方式生成批量的张量图像数据。\ntf.keras.preprocessing.image.ImageDataGenerator( featurewise_center=False, samplewise_center=False, featurewise_std_normalization=False, samplewise_std_normalization=False, zca_whitening=False, zca_epsilon=1e-06, rotation_range=0, width_shift_range=0.0, height_shift_range=0.0, brightness_range=None, shear_range=0.0, zoom_range=0.0, channel_shift_range=0.0, fill_mode=\u0026#34;nearest\u0026#34;, cval=0.0, horizontal_flip=False, vertical_flip=False, rescale=None, preprocessing_function=None, data_format=None, validation_split=0.0, dtype=None, ) 每批次内所生成的数据将被循环使用。\n参数  featurewise_center: 是否将数据集输入的均值设为0。 samplewise_center: 是否将每个样本的均值设为0，也就是使样本的所有特征的和为0。 featurewise_std_normalization: 是否将输入除以数据集的标准差。 samplewise_std_normalization: 是否将每个输入整体除以其标准差。 zca_epsilon: ZCA白化的ε值，默认值为1e-6。 zca_whitening: 是否进行ZCA白化。 rotation_range: Int，随机旋转的角度的最大值 。 width_shift_range: 类型为Float、一维数组或Int，当为float时，若width_shift_range \u0026lt; 1则表示为移动总宽的百分之多少，若width_shift_range \u0026gt;= 1则表示为移动多少个像素。当为一维数组时：表示为数组中的某个值。当为Int时则表示一个(-width_shift_range, +width_shift_range)的区间，例如当width_shift_range=2则该参数的值为[-1, 0, +1]这三个整数，相当于width_shift_range=[-1, 0, +1]。当width_shift_range=1.0则该参数的值为[-1.0, +1.0)这个区间内的整数。 height_shift_range: 类型为Float、一维数组或Int，当为float时，若height_shift_range \u0026lt; 1则表示为移动总宽的百分之多少，若height_shift_range \u0026gt;= 1则表示为移动多少个像素。当为一维数组时：表示为数组中的某个值。当为Int时则表示一个(-height_shift_range, +height_shift_range)的区间，例如当height_shift_range=2则该参数的值为[-1, 0, +1]这三个整数，相当于height_shift_range=[-1, 0, +1]。当height_shift_range=1.0则该参数的值为[-1.0, +1.0)这个区间内的整数 brightness_range: 两个Float组成的元组或列表，亮度调节范围。 shear_range: Float，裁剪程度的最大值（裁剪角度逆时针方向的值）。 zoom_range: Float or [lower, upper]，缩放范围，如果是float, [lower, upper] = [1-缩放范围, 1+缩放范围]。 channel_shift_range: Float，通道随机变换范围。 fill_mode: {\u0026ldquo;constant\u0026rdquo;, \u0026ldquo;nearest\u0026rdquo;, \u0026ldquo;reflect\u0026rdquo; or \u0026ldquo;wrap\u0026rdquo;}四个模式其中之一，默认是\u0026rsquo;nearest'。几种填充模式的示例：- \u0026lsquo;constant\u0026rsquo;: kkkkkkkk|abcd|kkkkkkkk (cval=k); - \u0026lsquo;nearest\u0026rsquo;: aaaaaaaa|abcd|dddddddd; - \u0026lsquo;reflect\u0026rsquo;: abcddcba|abcd|dcbaabcd; - \u0026lsquo;wrap\u0026rsquo;: abcdabcd|abcd|abcdabcd cval: Float或Int，当填充模式为constant的时候外部填充的具体值。 horizontal_flip: 是否随机水平翻转。 vertical_flip: 是否随机垂直翻转。 rescale: 缩放系数。默认为None。如果参数为None或0，则不进行重新缩放，否则在所有其他转换完成之后将数据乘以所提供的值。 preprocessing_function: 该函数在每个输入图像数据集缩放、增强之后运心，函数将接受一个类型为Image（等级为3的Numpy张量），返回一个同尺寸的Numpy张量。 data_format: 设置图像数据格式是“通道数前置（channels_first）”还是“通道数后置（channels_last）”。通道数后置表示shape(samples, height, width, channels)，通道数前置表示shape(samples, channels, height, width)。该参数默认会读取位于~/.keras/keras.json的Keras的config文件（image_data_format）。若config文件内未设置，则默认为channels_last。 validation_split: Float，划分部分图片验证集(范围必须在0到1之间)。 dtype: 生成数组的数据类型。  范例 使用.flow(x, y): (x_train, y_train), (x_test, y_test) = cifar10.load_data() y_train = utils.to_categorical(y_train, num_classes) y_test = utils.to_categorical(y_test, num_classes) datagen = ImageDataGenerator( featurewise_center=True, featurewise_std_normalization=True, rotation_range=20, width_shift_range=0.2, height_shift_range=0.2, horizontal_flip=True, validation_split=0.2) # compute quantities required for featurewise normalization # (std, mean, and principal components if ZCA whitening is applied) datagen.fit(x_train) # fits the model on batches with real-time data augmentation: model.fit(datagen.flow(x_train, y_train, batch_size=32, subset=\u0026#39;training\u0026#39;), validation_data=datagen.flow(x_train, y_train, batch_size=8, subset=\u0026#39;validation\u0026#39;), steps_per_epoch=len(x_train) / 32, epochs=epochs) # here\u0026#39;s a more \u0026#34;manual\u0026#34; example for e in range(epochs): print(\u0026#39;Epoch\u0026#39;, e) batches = 0 for x_batch, y_batch in datagen.flow(x_train, y_train, batch_size=32): model.fit(x_batch, y_batch) batches += 1 if batches \u0026gt;= len(x_train) / 32: # we need to break the loop by hand because # the generator loops indefinitely break\n使用.flow_from_directory(directory): train_datagen = ImageDataGenerator( rescale=1./255, shear_range=0.2, zoom_range=0.2, horizontal_flip=True) test_datagen = ImageDataGenerator(rescale=1./255) train_generator = train_datagen.flow_from_directory( \u0026#39;data/train\u0026#39;, target_size=(150, 150), batch_size=32, class_mode=\u0026#39;binary\u0026#39;) validation_generator = test_datagen.flow_from_directory( \u0026#39;data/validation\u0026#39;, target_size=(150, 150), batch_size=32, class_mode=\u0026#39;binary\u0026#39;) model.fit( train_generator, steps_per_epoch=2000, epochs=50, validation_data=validation_generator, validation_steps=800)\n将图像和遮罩一起转换。 # we create two instances with the same arguments data_gen_args = dict(featurewise_center=True, featurewise_std_normalization=True, rotation_range=90, width_shift_range=0.1, height_shift_range=0.1, zoom_range=0.2) image_datagen = ImageDataGenerator(**data_gen_args) mask_datagen = ImageDataGenerator(**data_gen_args) # Provide the same seed and keyword arguments to the fit and flow methods seed = 1 image_datagen.fit(images, augment=True, seed=seed) mask_datagen.fit(masks, augment=True, seed=seed) image_generator = image_datagen.flow_from_directory( \u0026#39;data/images\u0026#39;, class_mode=None, seed=seed) mask_generator = mask_datagen.flow_from_directory( \u0026#39;data/masks\u0026#39;, class_mode=None, seed=seed) # combine generators into one which yields image and masks train_generator = zip(image_generator, mask_generator) model.fit( train_generator, steps_per_epoch=2000, epochs=50)\n",
    "ref": "/blog/%E6%96%87%E6%A1%A3%E7%BF%BB%E8%AF%91keras%E7%9A%84%E5%9B%BE%E8%B1%A1%E5%A2%9E%E5%BC%BA%E5%AF%B9%E8%B1%A1%E7%B1%BBimagedatagenerator/"
  },{
    "title": "第一次用到了AppleWatch的高心率报警",
    "date": "",
    "description": "Apple Watch还是很有用的",
    "body": "现在我手上带的Apple Watch是去年六月份专门给我爸买的。因为我家基本都有心脏病，我就想着给我爸买一个Apple Watch检测心率什么的，顺便把ECG打开，觉得不舒服了可以测测心电图什么的。\n谁知道他刚拿上一个多月没事干老在那换表带玩，就把表的屏幕给摔了。上苹果官网查了下，换个屏幕的价格基本和买个新的没什么区别了，想了想又给他买了个新的第六代Apple Watch。刚开始想着旧的表就放着吧，也不能扔了啊。突然想到万能的华强北应该是可以修的，如果价格不是很高倒是可以修一下试试。上某宝一搜果然有专门换屏幕的，价格还不贵，也就两百多。想了想立马下单寄走，差不多半个月左右就给寄回来了，从外观上看基本看不出来是换过屏幕的（其实屏幕并没有坏，只是上面的玻璃碎了，最后只换了个玻璃）。表拿回来了我爸有新表了，这个旧的他肯定不带了，我妈手上带着镯子，她也不带手表，那这个旧的Apple Watch就只好归我了。\n刚开始拿着这个表就想着记记每天的运动量，电话微信什么的提示一下也就差不多了，没想到昨天竟然用到了Apple Watch高心率报警功能。\n昨天中午学校的教职工食堂正式营业，校长什么的都跑去吃饭了，我们办公室三个人懒得过去凑那个热闹，就想着去学校外面吃个火锅吧，刚好学校附近有个霸王牛肉火锅。中午吃完回到办公室在写一个文件，突然手表发出了个从来没听过的提示音。刚开始还以为是安了个什么新APP弹的通知，仔细一看竟然是心率过高的报警。\n通知里说我已经处于非活跃状态10分钟了，但是我的心率还在120以上。当时看完一脸懵逼，因为我并没有什么不舒服的感觉，如果手表不告诉我我都不知道我心跳这么快。既然手表都告诉我了那我还是注意点吧，然后就一直在办公室什么都不干坐到七点多下班，这期间心率一直都是110以上，晚上一点多睡觉的时候心率都没下到100以下，直到今天早上心率才正常。。。😱\n仔细想了想，感觉昨天心率一直那么高可能是中午吃得霸王牛肉有什么问题，因为之前手表从来没有报警过，而且我另一个同事下午直接发烧回家了，今天早上都没来上班。\n算了，以后还是不去那家吃饭了，毕竟小命要紧，我还是很怕死的。另外以后也得多多锻炼，赶紧减肥了。\n",
    "ref": "/blog/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8%E5%88%B0%E4%BA%86applewatch%E7%9A%84%E9%AB%98%E5%BF%83%E7%8E%87%E6%8A%A5%E8%AD%A6/"
  },{
    "title": "体验了一下炒币的感觉",
    "date": "",
    "description": "记录这次炒币的经过，其实就是一堆流水账",
    "body": "2021年5月19日，全球所有的数字加密货币集体狂跌，比特币最低价格都到了3万多美金了。趁着这波狂跌，我脑子一热也加入了炒币大军😊。\n其实比特币在5.2万美元的时候就动过炒币的念头，但是当时下的火币应用不太敢交易，一看到要直接给别人银行卡里转钱就放弃了😅。\n5月19日晚上在推上，看好多人都在说今天矿难了，当时真庆幸自己没在五万多刀的时候入场😏。再刷了一会推发现有人开始准备抄底，看到“抄底”两个字，突然又把我前几天炒币的念头勾起来了。刚好前几天发工资了，想了想，要么就从这个月的工资里把下个月的还车贷、支付宝、京东白条、信用卡的钱留出来，剩下的钱买点币试试把。😋\n说干就干！\n当即开始研究在那个交易所买币比较好。上一次动念头的时候下过一个trust wallet，但是在里面买币都要求国外身份或者使用美元。说真的，要是我有国外身份或者美元，我直接买Apple和Microsof的股票不好么？至于火币，听说这个交易所是国内的，国内公司的德行大家心里都有数，还是算了。想来想去，要么试试币安把。先去App Store下个了币安的应用，反正第一感觉比火币靠谱。账户弄好了，开始动手！💪\n刚开始想着直接投一万块钱试试吧，买五千的比特币，再买五千的以太坊。找银行卡付钱的时候突然冷静下来了，毕竟这次依然是直接给对方银行账户里的转账啊，万一要是被骗了那一万块钱直接就没了。对了，前段时间听说钢铁侠马老板开始吹狗狗币，查了下发现狗狗币也不贵，立马花500块买狗狗币🐶。第一、先试试在币安上直接给别人银行卡上转账买币到底靠不靠谱，第二、狗狗币现在价格挺低的，五百块钱能买不少呢，万一马老板再用力吹几次说不准能小赚一笔。第三、就花500块钱，就算这个币跌了也损失不了多少。😤\n当时买的时候连币安买币界面里的价格具体是多少美元一枚都没搞清楚，就直接下手了。买完之后也没管这些，发现到账挺快，也没有被骗，就赶紧下手买btc和eth。当时我记得我下手的时候btc的价格差不多在3.6万美元左右，eth在2400美元左右。当时觉得我买的价格肯定就是按我下手的时候的市场价，没多想直接就转账了，生怕转慢了涨价。（其实中间想起来有人说过“不要在睡觉之前做决定”，但是还是没有忍住，结果第二天早上起来果然证明了那句话是对的😭）\n先买了2000块的eth，然后又买了2000的btc。买完之后想了想，比特币是最早的数字加密货币，应该是靠谱的，而以太坊一个图灵完备的应用平台，eth相当于应用平台的使用凭证或者说是燃料。这两个数字加密货币我还算了解，或者说我只了解这两个。这两个感觉都挺靠谱的，那要么每种都买3000块的吧，就又买了1000块的eth。按当时的价格算，我所有的投资总共价值九百四十多美元😎。看着这九百四十多，我强迫症就犯了，怎么看怎么不舒服，就想给他凑个整，于是又花了360买了些狗狗币。买了之后发现怎么还是不到1000美元啊？这个时候我才发现，原来我买币的价格不是当时的市场价。。。。不过也对，币安怎么也得抽点手续费吧，但是这个手续费抽的可有点高。。。😭算了，不够1000就不够吧，再买还得被抽。至此，这次炒币的大头已经都出去了。\n刚买完的时候我想的是：既然买了那就长期持有，最次我也得坚持到年底，六千多现在能买iPhone 12，要是运气好年底就能买最新的iPhone 13 pro了。但是问题就出在我还买了狗狗币，不说别的，就这名字看着就像搞笑的。虽然刚开始花了500，后面又花了360，加一起八百多，跟买btc和eth的钱比起来还是少。但八百多我还能买两三个游戏呢。所以从买完到睡着那一个多小时，我基本是一分钟看一次这个三个币的行情😅。每次看完都想别看了，赶紧睡吧，反正买都买了，得长期持有。但是一分钟之后还是觉得狗狗币不靠谱。因为当时我已经知道了我买的价格并不是我看到的当时市场价，也算了我买的时候真实价格是多少，我就老想这狗狗币只要一涨到我买的时候的价格我就给它卖了换成btc。但是直到困到不行了也没等到价格涨到实际花的价格。😅\n第二天早上起来的第一件事还是打开币安，看看这三个币多少钱了。结果一看。。。啥玩意啊！比我昨天晚上买的时候价格还低。。。难道我要被套？😢\n早上上班还是和晚上睡着之前一样，隔几分钟看一眼行情，直到中午，因为币安的抽成有点太高，或者是我没仔细看当时的价格，直到中午我买的btc和eth都已经把亏的钱都涨回来了，还赚了一百多，但狗狗币还是在亏。说实在的，比特币还是牛😎，实际上亏的钱都是靠比特币涨回来的。\n直到下午下班回家之后，马老板发了条推又开始吹狗狗币。吹完之后狗狗币就开始上涨，到十点多的时候价格竟然比我买的价格还要高了5%左右。这还犹豫什么，把全部的狗狗币换成usdt，后面又趁btc的价格比我之前买的价格低的时候全部换成了btc。\n本以为手里的狗狗币全都脱手了，也安全的换成了btc，后面直接长期持有就好了。但是不知道为什么脑子里又蹦出了“定投”两个字，然后就又上头了。继续动不动就盯着btc和eth的价格、了解定投什么币比较好。中间又脑子发热充了200块买了些usdt准备买柴犬币，最后看了下柴犬币的价格走势发现基本是一路下跌，就放弃了买柴犬币，继续换成了btc。\n直到今天下午下班前，我还在愁到底定投什么币？每个月定投还是每年定投？定投多少钱？如果要定投那肯定不能定投一次提取一次，毕竟手续费很贵，那多长时间提取一次？提取出来是用纸钱包存还是iOS上的加密货币钱包应用存？要是用iOS上的应用那用imtoken还是之前下载的BRD？imtoken可是国产的应用，而且还不开源，在网上也看到了不少imtoken的负面新闻。如果用纸钱包那怎么保证纸钱包生成网站没有问题？生成了纸钱包要做几个备份？每个备份放在哪里保存？如果不小心被我爸妈扔了或者私钥被别人看到了怎么办？😔\n最后研究来研究去发现纸钱包比钱包应用安全，毕竟不联网就不会被黑，但是保存太麻烦了，而且要查询纸钱包里的虚拟货币目前值多少钱不方便（其实我都已经把做纸钱包需要的不联网的电脑和walletgenerate.org的源代码准备好了）。最后在bitcoin.org的推荐下，选择了相对安全好用的BRD。经过这一天的折腾也放弃了定投这个想法，因为我那个定投的价格真的要赚我感觉也赚不了多少。但是如果亏了，目前只是亏一个月的工资中的一部分，定投时间长了那就不是小数目了。天上掉馅饼的事情还是轮不到我的。这点自知之明我还是有。于是下午到家一咬牙，总共花了两百多人民币的手续费把所有btc和eth都转到了BRD上，把PIN码和助记词抄到了一本专门的笔记本上。最后删除了币安，因为怕我看到btc或者eth又跌了就管不住自己的手，想着再买点低价的减少一点损失😂。\n折腾到差不多晚上十点多，发现全部btc和eth都到账了就顺便看了眼当前价格。。。。老美是一睡醒就开始抛售btc和eth吗？\n这差不多就是我从19号到今晚把所有币提出来这两天多的经过，一堆流水账，写下来就当是记录我的第一次投资（或者叫投机？）。等我什么时候把这些btc和eth卖掉的时候我再上来记录一下这次的炒币到底是亏了还是赚了，中间应该不会再更新加密货币相关的blog了，如果下次更新不是我把那些币买了那就是我的币丢了，希望不会发生这种事情。🙏\n以上！\nP.S: 这次总共购买BTC：0.01573613（提现手续费0.0005BTC）、ETH：0.15880375（提现手续费0.006ETH）\n",
    "ref": "/blog/%E4%BD%93%E9%AA%8C%E4%BA%86%E4%B8%80%E4%B8%8B%E7%82%92%E5%B8%81%E7%9A%84%E6%84%9F%E8%A7%89/"
  },{
    "title": "打了第二针科兴疫苗，记录一下",
    "date": "",
    "description": "记录一下接种第二针疫苗的情况",
    "body": "昨天在学校打了第二针科兴疫苗，到现在快24小时了，记录一下感受吧。\n三月底打第一针疫苗的时候可能是那时候疫苗比较少，学校又是重点防疫单位，所以当时我们打的疫苗都是自带注射器的那种包装，拿出来就能打（就是banner里面的那种）。打的时候护士要么是刚毕业，要么是怕出事，手一直在抖。但是打的时候不怎么疼，打完也基本没什么感觉。本来以为可能会感冒、头晕、恶心、红肿之类的。结果什么都没发生，一小时之后连针眼都找不到了。\n昨天打疫苗的时候整体都很乱，打第一针疫苗之前还会查血压之类的。昨天打的时候之前没有检查人直接拿个单子去就好了，打的时候也没有说什么注意事项。而且这次打完胳膊特别疼，一直被针扎的那种疼。知道现在还是会疼，但是没有见到红肿。早上吃饭的时候和一个同事聊天才知道，这次的疫苗是两个人打一支疫苗，应该是疫苗不够用吧。\n反正我也不指着这个疫苗能起什么作用，国产的么。从来没什么质量好的。军用物品都敢以次充好，何况给普通人打的疫苗呢。听说十月左右会进口辉瑞的疫苗，但肯定轮不到我，说不定我这个地方都不会有。所以先这么着吧，听天由命。年底能出去玩了去一线城市看看能不能打上，打不上了也不管了。\n至于接种之后的反应，目前除了打针的地方有点疼，别的没什么。等有反应了我再更新吧。（希望不会来更新😂）\n",
    "ref": "/blog/%E6%89%93%E4%BA%86%E7%AC%AC%E4%BA%8C%E9%92%88%E7%A7%91%E5%85%B4%E7%96%AB%E8%8B%97%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B/"
  },{
    "title": "貌似终于把Distributed.Codes搭好了",
    "date": "",
    "description": "真的被自己蠢哭了。。。",
    "body": "前前后后算下来折腾GitHub Pages应该有两周了吧。\n本来用的是GitHub Pages自带的Jekyll，但是找了半天也没看到好看的主题。然后转战Hexo，翻了两天也没看到喜欢的。最后好不容易找到了一个Hugo的主题，也就是现在Distributed.Codes用的这个主题的前身。但是折腾了三天，发现那个主题三年前就停止更新了，在本地预览的时候就有两个报错。第一个RSS的报错可以直接搜到解决办法，但是第二个找了半天也没找到合适的方法，在准备放弃那个主题的时候偶然在GitHub上发现竟然有人基于那个主题做了它的slim版。下下来之后发现界面做了些优化，而且原版的bug也被修复了。\n可是当我兴高采烈的下载下来，本以为直接把文件传到GitHub上就能用。谁知道传上去就告诉我404……\n“不对啊，Jekyll就是直接就能用的啊，怎么Hugo传上去会告诉我找不到index.html文件呢，我之前好像看别人说Hugo会自动识别index.md文件来着”。就因为404的问题一直来回删除新建了不下十次。实在受不了了，准备完全按别人的教程一步一步的来，看看到底是哪里出了问题。结果需要上传到GitHub的竟然不是我用\u0026quot;hugo new site xxx\u0026quot;生成的“xxx”文件,而是要在配置好主题之类的东西之后上传运行“hugo”自动生成Public文件夹。。。。。吐血😂\n真的是被自己蠢哭了。。。\n本来以为直接上传Public文件就大功告成了吧，没想到前面还有坑等着我……\n“hugo-future-imperfect-slim”主题是支持多种语言的，可是我为了偷懒，直接把除了简体中文之外的所有语言都删了。config.toml里的“DefaultContentLanguage”也从en改成后面[Languages]里写的zh-CN。谁知道把语言写成zh-CN之后Hugo竟然不认为我选择的默认语言是简体中文，而是另一种语言。这就导致我之前生成的测试用的md文件都不显示。\n结果就是又开始重复删除新建，然后再测试。终于，在十分钟前因为手滑，忘记把CN大写，结果一切都正常了。我这才发现原来是这里出了问题。。。\n第二次被自己蠢哭。。。\n到目前为止，我的Distributed.Codes差不多算是完全建好了。之后要是能想起来，而且不偷懒的话，可能会时不时的来更新一下。但是也说不好这就是最后一篇了。233333\n就这样吧。我要去上传这篇blog了。大家有缘下次见😄\n",
    "ref": "/blog/%E8%B2%8C%E4%BC%BC%E7%BB%88%E4%BA%8E%E6%8A%8Adistributed.codes%E6%90%AD%E5%A5%BD%E4%BA%86/"
  },{
    "title": "要不要试一下新的设计风格？",
    "date": "",
    "description": "Glassmorphism风格看上去很棒的样子",
    "body": "最近没事干看dribbble，感觉Glassmorphism风格的设计很多，而且效果很好。\n要不要试试在用SwiftUI实现一下Glassmorphism的效果，但是又是磨砂，又是半透明的，可能会很耗资源吧。 不知道GitHub上面有没有人用SwiftUI实现过，可以去找找看。要是做好了应该很好看的样子。\n",
    "ref": "/blog/%E8%A6%81%E4%B8%8D%E8%A6%81%E8%AF%95%E4%B8%80%E4%B8%8B%E6%96%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E9%A3%8E%E6%A0%BC-%E4%B8%8A%E5%8D%881.46.41/"
  },{
    "title": "About",
    "date": "",
    "description": "",
    "body": "SA.Snow\n一个混日子的大学老师\n肥宅\n正在学习SwiftUI\n喜欢玩游戏机\n人菜瘾大\n准备买PS5\nSplatoon 3赶紧发售吧！！！！\n不玩微博、知乎、抖音、快手等等一切墙内社交媒体网站\n时常出没在Twitter\n",
    "ref": "/about/"
  },{
    "title": "联系",
    "date": "",
    "description": "",
    "body": "",
    "ref": "/contact/"
  }]
